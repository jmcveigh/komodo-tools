{
  "keyboard_shortcut": "", 
  "name": "PI Helper (TCL)", 
  "value": [
    "#!/usr/local/bin/wish", 
    "#", 
    "# Help compute pi - auxiliary process that performs a", 
    "# part of the integration.", 
    "# ", 
    "# The master processor uses send() to initialize $numprocs,", 
    "# $proc and $intervals.  When $itervals changes, we start", 
    "# integrating our part of the curve, and then send() the", 
    "# sum back to the master.", 
    "", 
    "wm title . \"Pi helper [tk appname]\"", 
    "wm iconname . \"pihelp\"", 
    "", 
    "set status \"\"", 
    "label .l -textvariable status -width 80", 
    "pack .l", 
    "", 
    "#set numprocs 0", 
    "#set proc 0", 
    "#set intervals 0", 
    "tkwait variable intervals", 
    "", 
    "set h [expr 1.0 / $intervals]", 
    "set helper_sum 0", 
    "", 
    "for {set i [expr $proc + 1]} {$i <= $intervals} {incr i $numprocs} {", 
    "    set x [expr $h * ($i - 0.5)]", 
    "    set helper_sum [expr $helper_sum +  4.0 / (1.0 + $x*$x)]", 
    "    set status \"Procesor $proc, interval = $i, partial sum = $helper_sum\"", 
    "    update idletasks", 
    "}", 
    "set helper_sum [expr $h * $helper_sum]", 
    "set status \"Processor $proc, final sum = $helper_sum\"", 
    "", 
    "while {1} {", 
    "    catch {send pi.tcl \"set sums($proc) $helper_sum\"}", 
    "    after 1000", 
    "}!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}