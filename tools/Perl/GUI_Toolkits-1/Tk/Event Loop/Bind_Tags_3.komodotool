{
  "keyboard_shortcut": "", 
  "name": "Bind Tags 3", 
  "value": [
    "#!/usr/local/bin/perl -w", 
    "", 
    "use strict;", 
    "use Tk;", 
    "", 
    "", 
    "package MyButton;", 
    "", 
    "# MyButton is a subclass of the standard Button widget. A", 
    "# MyButton behaves just like a normal Button except that", 
    "# it prints a message when the cursor moves over it instead", 
    "# of changing color. ClassInit() first establishes normal", 
    "# Button bindings and then overrides the <Enter> event", 
    "# descriptor.", 
    "#", 
    "# If there is no SUPER::ClassInit() call MyButton widgets", 
    "# would have no default behavior at all.", 
    "", 
    "use base qw/Tk::Button/;", 
    "Construct Tk::Widget 'MyButton';", 
    "", 
    "sub ClassInit {", 
    "    my ($class, $mw) = @_;", 
    "    $class->SUPER::ClassInit($mw);", 
    "    $mw->bind($class, '<Enter>', sub{print \"Entered a MyButton\\n\"});", 
    "}", 
    "", 
    "package main;", 
    "", 
    "my $mw = MainWindow->new;", 
    "$mw->Button(-text => 'NormalButton')->pack;", 
    "$mw->MyButton(-text => 'MyButton')->pack;", 
    "", 
    "# Although MyButton has overridden <Enter> on a class-wide basis,", 
    "# both Button and MyButton widgets have the same bindtags order:", 
    "#", 
    "# class, instance, Toplevel, \"all\"", 
    "#", 
    "# Now create a Button, $swap, and print its bindtags list, to", 
    "# prove, that by default, the order remains class, instance, Toplevel, \"all\".", 
    "", 
    "my $swap = $mw->Button(-text => 'SwapButton')->pack;", 
    "my (@swap_bindtags) = $swap->bindtags;", 
    "print \"\\$swap's original bindtags list is : @swap_bindtags.\\n\";", 
    "", 
    "# This is what you see:", 
    "#", 
    "# swap_bindtags=Tk::Button .button1 . all!", 
    "", 
    "# Reorder SwapButton bindtags by swapping the class and instance", 
    "# order:  instance class Toplevel all.  The print shows this:", 
    "#", 
    "# swap's new bindtags list is : .button1 Tk::Button . all", 
    "", 
    "$swap->bindtags( [ @swap_bindtags[1, 0, 2, 3] ] );", 
    "@swap_bindtags = $swap->bindtags;", 
    "print \"\\$swap's new      bindtags list is : @swap_bindtags.\\n\";", 
    "", 
    "# Now override Enter for the instance SwapButton only. Now,", 
    "# when the cursor <Enter>s $swap, first the instance callback", 
    "# is executed, then break() halts further searching of the", 
    "# bindtags list.", 
    "", 
    "$swap->bind('<Enter>' => sub {", 
    "    $_[0]->bell;", 
    "    $_[0]->break;", 
    "});", 
    "", 
    "MainLoop;", 
    "", 
    "# To summarize, to alter class bindings for several bindings or", 
    "# widgets it's best to subclass a widget.  For a single instance,", 
    "# break() with a reordered bindtags list might be easiest.", 
    "#", 
    "# This is why the bindtags order is different from Tcl/Tk's order", 
    "# of instance/class/Toplevel/all - under object orient Perl/Tk we", 
    "# are expected to use subclassing.!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}