{
  "keyboard_shortcut": "", 
  "name": "Trace", 
  "value": [
    "#!/usr/local/bin/perl -w", 
    "#", 
    "# Trace a Scale's variable and move a meter in unison.", 
    "", 
    "package Tk;", 
    "    use Tk::Trace;", 
    "", 
    "package main;", 
    "", 
    "use Tk;", 
    "use constant PI => 3.1415926;", 
    "use strict;", 
    "", 
    "my $mw = MainWindow->new;", 
    "", 
    "my $c = $mw->Canvas(qw/-width 200 -height 110 -bd 2 -relief sunken/)->grid;", 
    "$c->createLine(qw/ 100 100 10 100  -tag meter -arrow last -width 5/);", 
    "my $s = $mw->Scale(qw/-orient h -from 0 -to 100 -variable/ => \\my $v)->grid;", 
    "$mw->Label(-text => 'Slide Me for > 5 Seconds')->grid;", 
    "", 
    "$mw->traceVariable(\\$v, 'w' => [\\&update_meter, $c, $s]);", 
    "", 
    "$mw->after(5000 => sub {", 
    "    print \"Untrace time ...\\n\";", 
    "    my %vinfo = $s->traceVinfo(\\$v);", 
    "    print \"Watch info  :\\n  \", join(\"\\n  \", @{$vinfo{-legible}}), \"\\n\";", 
    "    $c->traceVdelete(\\$v);", 
    "});", 
    "", 
    "MainLoop;", 
    "", 
    "sub update_meter {", 
    "    my($index, $value, $op, @args) = @_;", 
    "    return if $op eq 'u';", 
    "    my($c, $s) = @args[0,1];\t# Canvas and Scale widgets", 
    "    my($min, $max) = ($s->cget(-from), $s->cget(-to));", 
    "    my $pos = $value / abs($max - $min);", 
    "    my $x = 100.0 - 90.0 * (cos( $pos * PI ));", 
    "    my $y = 100.0 - 90.0 * (sin( $pos * PI ));", 
    "    $c->coords(qw/meter 100 100/, $x, $y);", 
    "    return $value;", 
    "}!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}