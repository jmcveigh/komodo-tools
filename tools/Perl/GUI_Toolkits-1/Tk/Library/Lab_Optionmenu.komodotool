{
  "keyboard_shortcut": "", 
  "name": "Lab Optionmenu", 
  "value": [
    "$Tk::LabOptionmenu::VERSION = '1.0';", 
    "", 
    "package Tk::LabOptionmenu;", 
    "", 
    "use Tk::widgets qw/Optionmenu/;", 
    "use base qw/Tk::Frame/;", 
    "use strict;", 
    "", 
    "Construct Tk::Widget 'LabOptionmenu';", 
    "", 
    "sub ClassInit {", 
    "", 
    "    my($class, $mw) = @_;", 
    "", 
    "    $class->SUPER::ClassInit($mw);", 
    "", 
    "} # end ClassInit", 
    "", 
    "sub CreateArgs {", 
    "", 
    "    my($class, $mw, $args) = @_;", 
    "", 
    "    my(%args) = ();", 
    "    ($class->SUPER::CreateArgs($mw, $args), %args);", 
    "", 
    "} # end CreateArgs", 
    "", 
    "sub SetBindtags {", 
    "", 
    "    my($self) = @_;", 
    "", 
    "    $self->SUPER::SetBindtags;", 
    "", 
    "} # end SetBindtags", 
    "", 
    "sub Populate {", 
    "", 
    "    my($self, $args) = @_;", 
    "", 
    "    $self->SUPER::Populate($args);", 
    "    my $o = $self->Optionmenu->pack;", 
    "    $self->Advertise  ( 'optionmenu' =>  $o  );", 
    "    $self->ConfigSpecs( 'DEFAULT'    => [$o] );", 
    "    $self->Delegates  ( 'DEFAULT'    =>  $o  );", 
    "", 
    "} # end Populate", 
    "", 
    "1;", 
    "__END__", 
    "", 
    "=head1 NAME", 
    "", 
    "Tk::LabOptionmenu - An Optionmenu with a descriptive label", 
    "", 
    "=head1 SYNOPSIS", 
    "", 
    "S<    >I<$lo> = I<$parent>-E<gt>B<LabOptionmenu>(I<-option> =E<gt> I<value>, ... );", 
    "", 
    "=head1 DESCRIPTION", 
    "", 
    "This widget is a standard Optionmenu with a descriptive label that can", 
    "appear on the top, left, right or bottom of the Optionmenu.   ", 
    "", 
    "In addition to the standard Frame options, these additional options", 
    "are also supported:", 
    "", 
    "=over 4", 
    "", 
    "=item B<-label>", 
    "", 
    "Label text to appear next to the Optionmenu.  If I<-labelVariable> is", 
    "also specified, I<-label> takes precedence.", 
    "", 
    "=item B<-labelPack>", 
    "", 
    "Where to pack the label relative to the Optionmenu.  This parameter", 
    "is a reference to a list of B<pack> options. WARNING: The implication ", 
    "here is that Tk uses pack() to manage the Label's geometry, hence you", 
    "must be wary if using grid() in the same program - it's possible that", 
    "the different geometry managers may enter a race condition as they", 
    "compete with each other, causing the application to hang.", 
    "", 
    "=item B<-labelVariable>", 
    "", 
    "A reference to a Perl variable containing the label string.", 
    "", 
    "=item B<-labelXYZZY>", 
    "", 
    "The label attribute B<XYZZY>, where B<XYZZY> can be any valid Label ", 
    "option except -text and -textvariable, which, obviously, are", 
    "superseded by -label and -labelVariable.", 
    "", 
    "=back", 
    "", 
    "=head1 METHODS", 
    "", 
    "None.", 
    "", 
    "=head1 ADVERTISED WIDGETS", 
    "", 
    "Component subwidgets can be accessed via the B<Subwidget> method.", 
    "Valid subwidget names are listed below.", 
    "", 
    "=over 4", 
    "", 
    "=item Name:  label, Class: Label", 
    "", 
    "  Widget reference of Label widget.", 
    "", 
    "=item Name:  optionmenu, Class: Optionmenu", 
    "", 
    "  Widget reference of Optionmenu widget.", 
    "", 
    "=back", 
    "", 
    "=head1 EXAMPLE", 
    "", 
    "I<$lo> = I<$mw>-E<gt>B<LabOptionmenu>(-label =E<gt> 'Ranking:',", 
    "-options =E<gt> [1 .. 5], -labelPack =E<gt> [-side => 'left']);", 
    "", 
    "I<$lo>-E<gt>configure(-labelFont =E<gt> [qw/Times 18 italic/]);", 
    "", 
    "=head1 AUTHOR", 
    "", 
    "JPolooka@xy.zz.y", 
    "", 
    "Copyright (C) 2001, Joe Polooka. All rights reserved.", 
    "", 
    "This program is free software; you can redistribute it and/or", 
    "modify it under the same terms as Perl itself.", 
    "", 
    "=head1 KEYWORDS", 
    "", 
    "Optionmenu", 
    "", 
    "=cut!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}