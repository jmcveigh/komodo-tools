{
  "keyboard_shortcut": "", 
  "name": "Photo Rotate Simple", 
  "value": [
    "$Tk::PhotoRotateSimple::VERSION = '1.0';", 
    "", 
    "package Tk::Photo;", 
    "use Carp;", 
    "use strict;", 
    "", 
    "sub rotate_simple {", 
    "", 
    "    # Algorithm from img_rotate.tcl by Ryan Casey.", 
    "", 
    "    my ($photo, $rot) = @_;", 
    "    carp \"Illegal rotation '$rot'.\" unless $rot =~ /l90|r90|flip/i;", 
    "", 
    "    my $tmp = $photo->Tk::Widget::image('create', 'photo');", 
    "    bless $tmp, 'Tk::Photo';", 
    "", 
    "    my $width = $photo->width;", 
    "    my $height = $photo->height;", 
    "", 
    "    if ($rot =~ /l90/i) {", 
    "\tfor (my $x = 0; $x < $width; $x++) {", 
    "\t    my $curpix = $photo->data(-from => $x, 0, $x + 1, $height);", 
    "\t    $curpix = \"{$curpix}\";", 
    "\t    $tmp->put($curpix, -to => 0, $width - $x - 1);", 
    "\t}", 
    "    } elsif ($rot =~ /r90/i) {", 
    "\tfor (my $y = 0; $y < $height; $y++) {", 
    "\t    my $curpix = $photo->data(-from => 0, $y, $width, $y + 1);", 
    "\t    $curpix =~ s/^{(.*)}$/$1/;", 
    "\t    $tmp->put($curpix, -to => $height - $y - 1, 0);", 
    "\t}", 
    "    } else {", 
    "\t$tmp->copy($photo, -subsample => -1, -1);", 
    "    }", 
    "", 
    "    $photo->blank;", 
    "    $photo->copy($tmp);", 
    "    $photo->configure(-height => $width, -width => $height) if $rot !~ /flip/i;", 
    "    $photo->idletasks;", 
    "    ", 
    "    $tmp->delete;", 
    "    ", 
    "} # end rotate", 
    "", 
    "1;", 
    "__END__", 
    "", 
    "=head1 NAME", 
    "", 
    "Tk::PhotoRotateSimple - rotate Photos by 90 degrees.", 
    "", 
    "=head1 SYNOPSIS", 
    "", 
    "S<    >I<$photo>-E<gt>B<rotate_simple>(I<direction>);", 
    "", 
    "=head1 DESCRIPTION", 
    "", 
    "Tk::PhotoRotateSimple is a Photo method that either flips an image 180 degress,", 
    "or rotates it 90 degrees clockwise or anti-clockwise.", 
    "", 
    "=head1 OPTIONS", 
    "", 
    "The following option/value pairs are supported:", 
    "", 
    "=over 4", 
    "", 
    "=item B<direction>", 
    "", 
    "I<direction> can be I<flip>, I<l90> or I<r90>, for 180 degree, 90", 
    "degree anti-clockwise, or 90 degree clockwise rotation, respectively.", 
    "", 
    "=head1 EXAMPLE", 
    "", 
    "I<$photo>-E<gt>B<rotate_simple>('l90');", 
    "", 
    "=head1 AUTHOR", 
    "", 
    "Stephen.O.Lidie@Lehigh.EDU", 
    "", 
    "Copyright (C) 2001 - 2001, Steve Lidie. All rights reserved.", 
    "", 
    "This program is free software; you can redistribute it and/or", 
    "modify it under the same terms as Perl itself.", 
    "", 
    "=head1 KEYWORDS", 
    "", 
    "Photo, rotate", 
    "", 
    "=cut!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}