{
  "keyboard_shortcut": "", 
  "name": "Photo Window", 
  "value": [
    "#!/usr/local/bin/perl -w", 
    "#", 
    "# winphoto", 
    "", 
    "use Tk;", 
    "use Tk::WinPhoto;", 
    "use strict;", 
    "", 
    "# Create a Label with a picture of the neko.", 
    "", 
    "my $mw = MainWindow->new;", 
    "my $neko = $mw->Label(-image => $mw->Photo(-file => 'images/Icon.xpm'),", 
    "\t\t      -borderwidth => 0);", 
    "$neko->pack;", 
    "", 
    "# Capture the window and write a new XPM file.", 
    "", 
    "$mw->update;", 
    "my $win_img = $mw->Photo(-format => 'Window', -data => oct($mw->id));", 
    "$win_img->write('images/winphoto-neko.xpm', -format => 'xpm');", 
    "", 
    "# Graphically compare the original and captured XPM files. First,", 
    "# read the original XPM file into a Text widget. ", 
    "#", 
    "# Notice the $/ trick.  Setting the input record separator to undef", 
    "# means that the file is read as a single line with embedded newlines,", 
    "# which is then inserted into the Text widget as a single line without", 
    "# any tags. Otherwise, insert() would see a list of lines, insert the", 
    "# first, treat the second as a tag, insert the third, treat the fourth", 
    "# as a tag, etcetera.", 
    "", 
    "my $f = $mw->Frame->pack;", 
    "my $t1 = $f->Text(qw/-width 35 -height 40 -font fixed/);", 
    "$t1->pack(-side => 'left');", 
    "", 
    "open XPM, 'images/Icon.xpm' or die $!;", 
    "$/ = undef;", 
    "$t1->insert('end', <XPM>);", 
    "close XPM;", 
    "", 
    "# Now create an empty Photo and read the new XPM image into it. We'll", 
    "# then loop through the image pixel by pixel, read the RGB values,", 
    "# and display them as a pseudo-XPM file.", 
    "", 
    "my $neko_image = $mw->Photo;", 
    "$neko_image->read('images/winphoto-neko.xpm');", 
    "", 
    "my $t2 = $f->Text(qw/-width 32 -height 40 -font fixed/);", 
    "$t2->pack(-side => 'left');", 
    "", 
    "# Typically, the image captured by WinPhoto is not identical to the", 
    "# original.  This mapping approximates the original XPM file.", 
    "", 
    "my %pixmap = ('000000' => '.',", 
    "\t      '00ff00' => 'o',", 
    "\t      'ffffff' => ' ',", 
    "\t      'ffd500' => 'X',", 
    "\t      'ffaa00' => 'X',", 
    "\t      );", 
    "", 
    "$t2->insert('end', \"The new pixmappings differ:\\n\\n\");", 
    "foreach (keys %pixmap) {", 
    "    $t2->insert('end', \" $pixmap{$_}      $_\\n\");", 
    "}", 
    "", 
    "# Prior to Tk800.018, the get() method returned a string with", 
    "# 3 space-separated integers. Now get() returns a proper list.", 
    "", 
    "my($w, $h) = ($neko_image->width, $neko_image->height);", 
    "", 
    "foreach my $y (0 .. $h - 1) {", 
    "    foreach my $x (0 .. $w - 1) {", 
    "\t#my($r, $g, $b) = split ' ', $neko_image->get($x, $y);", 
    "\tmy($r, $g, $b) = $neko_image->get($x, $y);", 
    "\tmy $code = sprintf  \"%02x%02x%02x\", $r, $g, $b;", 
    "\t$t2->insert('end', $pixmap{$code});", 
    "    }", 
    "    $t2->insert('end', \"\\n\");", 
    "}", 
    "", 
    "MainLoop;!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}