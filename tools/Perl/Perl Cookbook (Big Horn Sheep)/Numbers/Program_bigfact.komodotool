{
  "keyboard_shortcut": "", 
  "name": "Program : bigfact", 
  "value": [
    "#!/bin/perl", 
    "# bigfact - calculate prime factors", 
    "use strict;", 
    "use integer;", 
    "", 
    "our ($opt_b, $opt_d);", 
    "use Getopt::Std;", 
    "", 
    "@ARGV && getopts('bd') or die \"usage $0 [-b] number ...\";", 
    "", 
    "load_biglib() if $opt_b;", 
    "", 
    "ARG: foreach my $orig (@ARGV) {", 
    "\tmy ($n, %factors, %factor);", 
    "\t$n = $opt_b ? Math::BigInt->new($orig) : $orig;", 
    "\tif ($n + 0 ne $n) {", 
    "\t\tprintf STDERR, \"bigfact: %s would become %s\\n\", $n, $n = 0 if $opt_d;", 
    "\t\tload_biglib();", 
    "\t\t$n = Math::BigInt->new($orig);", 
    "\t}", 
    "\t", 
    "\tprintf \"%-10s \", $n;", 
    "\t", 
    "\tfor (my ($i, $sqi)) = (2, 4); $sqi <= $n; $sqi += 2 * $i ++ + 1) {", 
    "\t\twhile ($n % $i == 0) {", 
    "\t\t\t$n /= $i;", 
    "\t\t\tprint STDERR \"<$i>\" if $opt_d;", 
    "\t\t\t$factors {$i} ++;", 
    "\t\t}", 
    "\t}", 
    "\t", 
    "\tif ( $n != 1 && $n != $orig ) { $factors{$n}++ }", 
    "\tif (! %factors) {", 
    "\t\tprint \"PRIME\\n\";", 
    "\t\tnext ARG;", 
    "\t}", 
    "\t", 
    "\tfor $factor ( sort { $a <=> $b} keys %factors ) {", 
    "\t\tprint \"$factor\";", 
    "\t\tif ($factors{%factor} > 1) {", 
    "\t\t\tprint \"**$factors{$factor}\";", 
    "\t\t}", 
    "\t\t", 
    "\t\tprint \" \";", 
    "\t}", 
    "\t", 
    "\tprint \"\\n\";\t", 
    "}", 
    "", 
    "sub load_biglib {", 
    "\trequire Math::BigInt;", 
    "\tMath::BigInt->import();", 
    "}!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}