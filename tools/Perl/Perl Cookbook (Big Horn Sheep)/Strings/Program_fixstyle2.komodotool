{
  "keyboard_shortcut": "", 
  "name": "Program : fixstyle2", 
  "value": [
    "#!/bin/perl -w", 
    "# fixstyle2 - like fixstyle but faster for many many changes", 
    "use strict;", 
    "my $verbose = (@ARGV && $ARGV[0] eq '-v' && shift);", 
    "my %changes = ();", 
    "while (<DATA>) {", 
    "\tchomp;", 
    "\tmy ($in, $out) = split /\\s*=>\\s*/;", 
    "\tnext unless $in && $out;", 
    "\t$changes{$in} = $out;", 
    "}", 
    "", 
    "if (@ARGV) {", 
    "\t$^I = \".orig\";", 
    "} else {", 
    "\twarn \"$0: Reading from stdin\\n\" if -t STDIN;", 
    "}", 
    "", 
    "while (<>) {", 
    "\tmy $i = 0;", 
    "\ts/^(\\s+)// && print $1; # emit leading whitespace", 
    "\tfor (split /(\\s+)/, $_, -1) { # preserve trailing whitespace", 
    "\t\tprint ( ($i++ & 1) ? $_ : ($changes{$_} || $_));", 
    "\t}", 
    "}", 
    "", 
    "__END__", 
    "analysed => analyzed", 
    "built-in => builtin", 
    "chastized => chastised", 
    "commandline => command-line", 
    "de-allocate => deallocate", 
    "dropin => drop-in", 
    "hardcode => hard-code", 
    "meta-data => metadata", 
    "multicharacter => multi-character", 
    "multiway => multi-way", 
    "non-empty => nonempty", 
    "non-profit => nonprofit", 
    "non-trappable => nontrappable", 
    "pre-define => predefine", 
    "preextend => pre-extend", 
    "re-compiling => recompiling", 
    "reenter => re-enter", 
    "turnkey => turn-key!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "indent_relative": "false", 
  "type": "snippet", 
  "treat_as_ejs": "false", 
  "auto_abbreviation": "false"
}