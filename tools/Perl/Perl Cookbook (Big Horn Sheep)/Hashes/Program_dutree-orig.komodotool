{
  "keyboard_shortcut": "", 
  "name": "Program : dutree-orig", 
  "value": [
    "#!/bin/perl", 
    "# dutree_orig : the old version pre-perl5 (early 90s)", 
    "@lines = `du @ARGV`;", 
    "chop(@lines);", 
    "&input($top = pop @lines);", 
    "&output($top);", 
    "exit;", 
    "", 
    "sub input {", 
    "\tlocal($root, *kid, $him) = @_[0,0];", 
    "\twhile (@lines && &childof($root, $lines[$#lines])) {", 
    "\t\t&input($him = pop(@lines));", 
    "\t\tpush(@kid, $him);", 
    "\t}", 
    "\t", 
    "\tif (@kid) {", 
    "\t\tlocal ($mysize) = ($root =~ /^(\\d+)/);", 
    "\t\tfor (@kid) { $mysize -= (/^(\\d+)/)[0]; }", 
    "\t\tpush(@kid, \"$mysize .\") if $size != $mysize;", 
    "\t}", 
    "\t@kid = &sizesort(*kid);", 
    "}", 
    "", 
    "sub output {", 
    "\tlocal($root, *kid, $prefix) = @_[0,0,1];", 
    "\tlocal($size, $path) = split(' ', $root);", 
    "\t$path =~ s!.*/!!;", 
    "\t$line = sprintf(\"%${width}d %s\", $size, $path);", 
    "\tprint $prefix, $line, \"\\n\";", 
    "\t$prefix .= $line;", 
    "\t$prefix =~ s/\\d /| /;", 
    "\t$prefix =~ s/[^]/ /g;", 
    "\tlocal($width) = $kid[0] =~ /(\\d+)/ &&  length(\"$1\");", 
    "\tfor (@kid) { &output($_, $prefix); };", 
    "}", 
    "", 
    "sub sizesort {", 
    "\tlocal(*list, @index) = shift;", 
    "\tsub bynum { $index[$b] <=> $index[$a]; }", 
    "\tfor (@list) { push(@index, /(\\d+)/); }", 
    "\t@list[sort bynum 0 .. $#list];", 
    "}", 
    "", 
    "sub childof {", 
    "\tlocal (@pair) = @_;", 
    "\tfor (@pair) { s/^\\d+\\s+//g; s/$\\//; }", 
    "\tindex($pair[1], $pair[0]) >= 0;", 
    "}!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}