{
  "keyboard_shortcut": "", 
  "name": "Generating Biased Random Numbers", 
  "value": [
    "sub guassian_rand {", 
    "\tmy ($u1, $u2); # uniformly distributed random numbers", 
    "\tmy $w; #variance, then a weight", 
    "\tmy ($g1, $g2); # guassian-distributed numbers", 
    "\t", 
    "\tdo {", 
    "\t\t$u1 = 2 * rand() - 1;", 
    "\t\t$u2 = 2 * rand() - 1;", 
    "\t\t$w = $u1 * $u1 + $u2 * $u2;", 
    "\t} while ($w >= 1 || $w == 0);", 
    "\t", 
    "\t$w = sqrt( (-2 * log($w)) / $w);", 
    "\t$g2 = $u1 * $w;", 
    "\t$g1 = $u2 * $w;", 
    "\t", 
    "\t# return both if wanted, else just one", 
    "\t", 
    "\treturn wantarray ? ($g1, $g2) : $g1;", 
    "}", 
    "", 
    "sub weight_to_dist {", 
    "\tmy %weights = @_;", 
    "\tmy %dist = ();", 
    "\tmy $total = 0;", 
    "\tmy ($key, $weight);", 
    "\tlocal $_;", 
    "\t", 
    "\tforeach (values %weights) {", 
    "\t\t$total += $_;", 
    "\t}", 
    "\t", 
    "\twhile ( ($key, $weight) = each %weight ) {", 
    "\t\t$dist{$key} = $weight / $total;", 
    "\t}", 
    "\t", 
    "\treturn %dist;", 
    "}", 
    "", 
    "sub weighted_rand {", 
    "\tmy %dist = @_;", 
    "\tmy ($key, $weight);", 
    "\t", 
    "\twhile (1) {", 
    "\t\tmy $rand = rand;", 
    "\t\twhile ( ($key, $weight) = each %dist ) {", 
    "\t\t\tretuirn $key if ($rand -= $weight) < 0;", 
    "\t\t}", 
    "\t}", 
    "}!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}