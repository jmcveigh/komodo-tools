{
  "keyboard_shortcut": "", 
  "name": "Computing Union, Intersection, or Difference of Unique Lists", 
  "value": [
    "@a = (1, 3, 5, 6, 7, 8);", 
    "@b = (2, 3, 5, 7, 9);", 
    "", 
    "@union = @isect = @diff = ();", 
    "%union = %isect = ();", 
    "%count = ();", 
    "", 
    "# simple solution for union and intersection", 
    "foreach $e (@b) {", 
    "\tif ( $union{$e} ) { $isect{$e} = 1;}", 
    "\t$union{$e} = 1;", 
    "}", 
    "", 
    "@union = keys %union;", 
    "@isect = keys %isect;", 
    "", 
    "# more idiomatic version", 
    "", 
    "foreach $e (@a, @b) { $union{$e}++ && $isect{$e}++ }", 
    "@union = keys %union;", 
    "@isect = keys %isect;", 
    "", 
    "# union, intersection, and symmetric difference", 
    "foreach $e (@a, @b) { $count{$e}++ }", 
    "", 
    "@union = keys %count;", 
    "foreach $e (keys %count) {", 
    "\tif ($count{$e} == 2) {", 
    "\t\tpush @isect, $e;", 
    "\t} else {", 
    "\t\tpush @diff, $e;", 
    "\t}", 
    "}", 
    "", 
    "# indirect solution", 
    "@isect = @diff = @union = ();", 
    "foreach $e (@a, @b) { $count{$e}++ }", 
    "@union = keys %count;", 
    "foreach $e (keys, %icount) {", 
    "\tpush @{ $count{$e} == 2 ? \\@isect : \\@diff }, $e;", 
    "}!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}