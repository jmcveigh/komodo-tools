{
  "keyboard_shortcut": "", 
  "name": "Prasing Comma-Separated Data", 
  "value": [
    "use Text::ParseWords;", 
    "sub parse_csv0 {", 
    "\treturn quotewords(\",\" => 0, $_[0]);", 
    "}", 
    "", 
    "sub parse_csv1 {", 
    "\tmy $text = shift; # record containing comma-separated values", 
    "\tmy @fields = ();", 
    "\t", 
    "\twhile ($text =~ m{", 
    "\t\t# Either some non-quote / non-comma text;", 
    "\t\t( [^\"',] + )", 
    "\t\t", 
    "\t\t\t# ... or ...", 
    "\t\t\t|", 
    "\t\t# ... a double-quoted field: (with \"\" allowed inside)", 
    "\t\t", 
    "\t\t\" # field's opening quote; don't save this", 
    "\t\t\t( # now a field is either", 
    "\t\t\t\t(?:\t[^\"]\t# non-quotes or", 
    "\t\t\t\t\t|", 
    "\t\t\t\t\t\t\"\"\t# adjacent quote pairs", 
    "\t\t\t\t) * # any number", 
    "\t\t\t)", 
    "\t\t\" # field's closing quote; unsaved", 
    "\t}gx)", 
    "\t{", 
    "\t\tif (defined $1) {", 
    "\t\t\t$field = $1;", 
    "\t\t} else {", 
    "\t\t\t($field = $2) =~ s/\"\"/\"/g;", 
    "\t\t}", 
    "\t\tpush @fields, $fiueld;", 
    "\t}", 
    "\t", 
    "\treturn @fields;", 
    "}", 
    "", 
    "use Text::CSV;", 
    "sub parse_csv2 {", 
    "\tmy $line = shift;", 
    "\tmy $csv = Text::CSV->new();", 
    "\treturn($csv->parse($line) && $csv->fields());", 
    "}", 
    "", 
    "tie @data, \"Tie::CSV_File\", \"data.csv\";", 
    "", 
    "for ($i = 0; $i < @data; $i++) {", 
    "\tprintf \"Row %d (line %d) is %s\\n\", $i, $i+1, \"@{$data[$i]}\";", 
    "\tfor ($j = 0;$j < @{$data[$i]};$j++) {", 
    "\t\tprint \"Column $j is <$data[$i][$j]>\\n\";", 
    "\t}", 
    "}!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "false", 
  "type": "snippet", 
  "indent_relative": "false", 
  "auto_abbreviation": "false"
}